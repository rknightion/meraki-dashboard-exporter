// High-frequency Alloy configuration for capturing burst activity
// This configuration uses more aggressive scraping to capture the short-lived
// "something happens" activity that occurs within seconds during collection cycles

pyroscope.scrape "meraki_exporter_burst_capture" {
	// Scrape every 15 seconds to ensure we capture short burst activity
	// This provides better granularity for the sub-minute collection bursts
	scrape_interval = "15s"

	targets = [
		{
			"__address__" = "localhost:9099",
			"service_name" = "meraki-dashboard-exporter",
			"env" = "production",
			"instance" = "localhost:9099",
			"job" = "meraki-exporter-burst-profiling",
			"component" = "dashboard-exporter",
			"team" = "infrastructure",
			"scrape_strategy" = "high_frequency",
		},
	]

	// Focus on the most important profiles for burst capture

	// CPU profile - most critical for burst activity analysis
	// 14 second duration (scrape_interval - 1) to capture activity
	profile {
		delta = true
		// This will capture overlapping CPU activity to ensure no gaps
	}

	// Wall clock profile - essential for understanding time spent during bursts
	profile.custom "wall" {
		enabled = true
		path = "/debug/pprof/wall"
		delta = true
		// 14 second sampling windows with overlap
	}

	// Memory allocation tracking during burst activity
	allocs {}

	// Heap snapshots to track memory growth during collections
	heap {}

	// Thread activity during collection bursts
	goroutine {}

	// Exception tracking during high-activity periods
	profile.custom "exceptions" {
		enabled = true
		path = "/debug/pprof/exceptions"
		delta = false
	}

	// Optimized profiling config for burst capture
	profiling_config {
		mutex_profiling_fraction = 1
		block_profiling_rate = 10 // Higher rate for better resolution
	}
}

// Separate scraper for less critical profiles at normal frequency
pyroscope.scrape "meraki_exporter_background" {
	// Normal interval for background/steady-state profiling
	scrape_interval = "60s"

	targets = [
		{
			"__address__" = "localhost:9099",
			"service_name" = "meraki-dashboard-exporter",
			"env" = "production",
			"instance" = "localhost:9099",
			"job" = "meraki-exporter-background-profiling",
			"component" = "dashboard-exporter",
			"team" = "infrastructure",
			"scrape_strategy" = "background",
		},
	]

	// Background/steady-state profiles
	block {}
	mutex {}

	// Python-specific object tracking
	profile.custom "inuse_objects" {
		enabled = true
		path = "/debug/pprof/inuse_objects"
		delta = false
	}

	profile.custom "inuse_space" {
		enabled = true
		path = "/debug/pprof/inuse_space"
		delta = false
	}
}

// Write all profiles to Grafana Cloud
pyroscope.write "endpoint" {
	endpoint {
		// NOTE: Update this URL to your Grafana Cloud Pyroscope endpoint
		// The URL you provided appears to be for Loki, not Pyroscope
		// Pyroscope endpoints typically look like: https://profiles-prod-XXX.grafana.net
		url = "https://profiles-prod-035.grafana.net" // UPDATE THIS URL

		basic_auth {
			username = "1175378"
			password = sys.env("GCLOUD_RW_API_KEY")
		}

		headers = {
			"X-Scope-OrgID" = "meraki-exporter",
		}
	}

	external_labels = {
		"cluster" = "production",
		"region" = "us-east-1",
		"app" = "meraki-dashboard-exporter",
	}

	// Optional: Add queue config for high-frequency data
	queue_config {
		capacity = 10000
		max_shards = 10
		batch_send_deadline = "5s"
	}
}

// Health monitoring
discovery.http "meraki_exporter_health" {
	url = "http://localhost:9099/health"
	refresh_interval = "15s" // Match burst scrape interval
}

// Enhanced logging for troubleshooting high-frequency scraping
logging {
	level = "info"
	format = "json"
}
