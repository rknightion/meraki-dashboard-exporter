name: Snyk Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  snyk-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install dependencies
        run: |
          uv sync
          uv pip list  # For Snyk to see installed packages

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python-3.10@master
        continue-on-error: true  # Don't fail the build on vulnerabilities (yet)
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: >
            --all-projects
            --severity-threshold=high
            --fail-on=upgradable
            --project-name=meraki-dashboard-exporter
            --org=${{ secrets.SNYK_ORG }}
            --sarif-file-output=snyk.sarif

      - name: Upload Snyk results to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: snyk.sarif
          category: snyk-vulnerability-scan

  snyk-code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Snyk Code analysis
        uses: snyk/actions/python-3.10@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: code test
          args: >
            --severity-threshold=high
            --project-name=meraki-dashboard-exporter-code
            --org=${{ secrets.SNYK_ORG }}
            --sarif-file-output=snyk-code.sarif

      - name: Upload Snyk Code results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: snyk-code.sarif
          category: snyk-code-analysis

  snyk-docker:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'schedule'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t meraki-dashboard-exporter:test .

      - name: Run Snyk to check Docker image for vulnerabilities
        uses: snyk/actions/docker@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: meraki-dashboard-exporter:test
          args: >
            --severity-threshold=medium
            --file=Dockerfile
            --project-name=meraki-dashboard-exporter-docker
            --org=${{ secrets.SNYK_ORG }}
            --sarif-file-output=snyk-docker.sarif

      - name: Upload Snyk Docker results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: snyk-docker.sarif
          category: snyk-docker-analysis

  snyk-iac:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Snyk to check infrastructure as code
        uses: snyk/actions/iac@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: >
            --severity-threshold=medium
            --project-name=meraki-dashboard-exporter-iac
            --org=${{ secrets.SNYK_ORG }}
            --sarif-file-output=snyk-iac.sarif

      - name: Upload Snyk IaC results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: snyk-iac.sarif
          category: snyk-iac-analysis

  snyk-monitor:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [snyk-scan, snyk-code, snyk-docker, snyk-iac]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Install dependencies
        run: uv sync

      - name: Monitor dependencies with Snyk
        uses: snyk/actions/python-3.10@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor
          args: >
            --all-projects
            --project-name=meraki-dashboard-exporter
            --org=${{ secrets.SNYK_ORG }}
            --remote-repo-url=${{ github.server_url }}/${{ github.repository }}
