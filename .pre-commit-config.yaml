repos:
  # Auto-update pre-commit hooks
-   repo: https://gitlab.com/vojko.pribudic.foss/pre-commit-update
    rev: v0.8.0
    hooks:
    -   id: pre-commit-update

  # Python code formatting and linting
-   repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.7
    hooks:
    -   id: ruff-check
        args: [--fix]
    -   id: ruff-format

-   repo: https://github.com/zizmorcore/zizmor-pre-commit
    rev: v1.11.0
    hooks:
    -   id: zizmor
        args: [--fix=all]

  # Type checking
-   repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.17.1
    hooks:
    -   id: mypy
        additional_dependencies:
        -   pydantic>=2.10.0
        -   pydantic-settings>=2.6.0
        -   types-requests
        -   pytest>=8.3.0
        -   structlog>=24.4.0
        -   fastapi>=0.115.0
        -   uvicorn[standard]>=0.32.0
        -   meraki>=2.0.3
        -   prometheus-client>=0.22.1
        -   httpx>=0.27.0
        -   anyio>=4.6.0
        -   opentelemetry-api>=1.29.0
        -   opentelemetry-sdk>=1.29.0
        -   opentelemetry-exporter-otlp>=1.29.0
        -   opentelemetry-instrumentation-fastapi>=0.50b0
        -   opentelemetry-instrumentation-requests>=0.50b0
        -   opentelemetry-instrumentation-httpx>=0.50b0
        -   opentelemetry-instrumentation-logging>=0.50b0
        -   opentelemetry-instrumentation-threading>=0.50b0
        -   psutil>=5.9.0
        -   jinja2>=3.1.0
        -   cryptography>=45.0.5
        args: [--config-file=pyproject.toml, .]
        pass_filenames: false

  # Security checks
-   repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
    -   id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: '^(poetry\.lock|uv\.lock|\.secrets)$'

-   repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
    -   id: bandit
        args: ["-c", "pyproject.toml"]
        additional_dependencies: ["bandit[toml]"]

  # Spell checking
-   repo: https://github.com/codespell-project/codespell
    rev: v2.4.1
    hooks:
    -   id: codespell
        args: ["--skip=*.lock,*.css,*.js,*.svg", "--ignore-words-list=softwares,optIns"]

  # YAML/JSON/TOML validation
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
    -   id: check-yaml
        args: [--unsafe]
    -   id: check-json
    -   id: check-toml
    -   id: check-merge-conflict
    -   id: check-case-conflict
    -   id: check-added-large-files
        args: ["--maxkb=1000"]
    -   id: check-ast
    -   id: debug-statements
    -   id: fix-byte-order-marker
    -   id: trailing-whitespace
    -   id: end-of-file-fixer
    -   id: mixed-line-ending

  # Dockerfile linting
-   repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
    -   id: hadolint
        args: ["--ignore", "DL3008"]

  # Python tests
-   repo: local
    hooks:
    -   id: pytest
        name: pytest
        entry: uv run pytest
        language: system
        types: [python]
        pass_filenames: false
        always_run: true
        stages: [pre-commit]

  # Python docstring checking
-   repo: https://github.com/PyCQA/pydocstyle
    rev: 6.3.0
    hooks:
    -   id: pydocstyle
        additional_dependencies: [tomli]


  # Format pyproject.toml consistently
-   repo: https://github.com/tox-dev/pyproject-fmt
    rev: v2.6.0
    hooks:
    -   id: pyproject-fmt

# Configuration
default_language_version:
  python: python3.13

# Run specific hooks only on certain stages
default_stages: [pre-commit, pre-push]

# Exclude certain paths globally
exclude: |-
  (?x)^(
    .*\.egg-info/|
    \.git/|
    \.mypy_cache/|
    \.pytest_cache/|
    \.ruff_cache/|
    \.venv/|
    build/|
    dist/|
    __pycache__/
  )
