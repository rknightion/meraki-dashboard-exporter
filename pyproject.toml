[project]
name = "meraki-dashboard-exporter"
version = "0.3.1"
description = "Prometheus exporter for Cisco Meraki Dashboard API metrics"
readme = "README.md"
authors = [
    { name = "Rob Knight", email = "12484127+rknightion@users.noreply.github.com" }
]
requires-python = ">=3.13"
dependencies = [
    "meraki>=2.0.3",
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.32.0",
    "prometheus-client>=0.22.1",
    "structlog>=24.4.0",
    "httpx>=0.27.0",
    "anyio>=4.6.0",
    "pydantic>=2.10.0",
    "pydantic-settings>=2.6.0",
    "opentelemetry-api>=1.29.0",
    "opentelemetry-sdk>=1.29.0",
    "opentelemetry-exporter-otlp>=1.29.0",
    "opentelemetry-instrumentation-fastapi>=0.50b0",
]

[tool.ruff]
target-version = "py313"
line-length    = 100
preview = true
indent-width   = 4

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "D",   # pydocstyle
    "N",  # pep8-naming
    "Q",  # flake8-quotes
]
extend-select = [
  "PL",     # pylint rules
  "PTH",    # pathlib recommendations
  "PERF",   # performance tweaks
  "NPY",    # NumPy-specific hints
]
ignore = [
    "D202",  # no blank lines after function docstring
    "D203",  # one blank line before class
    "D212",  # multi-line-summary-first-line
    "D213",  # multi-line docstring summary should start at the second line
    "D401",  # first line of docstring should be in imperative mood
    "PLR2004",  # magic value used in comparison
    "PLR6301",  # method could be function/class method/static method
    "PLW0603",  # using global statement
    "PLC0415",  # import should be at top-level of file
    "C901",  # function is too complex
    "W293",  # blank line contains whitespace
    "PLR0912",  # too many branches
    "PLR0913",  # too many arguments in function definition
    "PLR0914",  # too many local variables
    "PLR0915",  # too many statements
    "PLR0917",  # too many positional arguments
    "PERF401",  # use list comprehension
    "E501",  # line too long (handled by formatter)
]

[dependency-groups]
dev = [
    "ruff>=0.12.2",
    "ty>=0.0.1a13",
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "mypy>=1.13.0",
    "httpx>=0.27.0",
]

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
no_implicit_reexport = true
namespace_packages = true
show_error_codes = true
show_column_numbers = true
pretty = true
plugins = ["pydantic.mypy"]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[[tool.mypy.overrides]]
module = ["meraki.*", "prometheus_client.*", "opentelemetry.*"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disable_error_code = ["no-untyped-def", "var-annotated"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.bandit]
exclude_dirs = ["tests", "scripts"]
skips = ["B101", "B601", "B602", "B603", "B604", "B605", "B606", "B607", "B608", "B609"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
